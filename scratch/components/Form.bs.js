// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Css from "bs-css/src/Css.js";
import * as React from "react";
import * as UseForm from "../hooks/UseForm.bs.js";
import * as FormStyle from "./FormStyle.bs.js";
import * as FormTypes from "../hooks/FormTypes.bs.js";
import * as Belt_Array from "bs-platform/lib/es6/belt_Array.js";

var button = Css.style(/* :: */[
      Css.backgroundColor(/* `hex */[
            5194459,
            "#006bfc"
          ]),
      /* :: */[
        Css.color(Css.white),
        /* :: */[
          Css.width(Css.px(316)),
          /* :: */[
            Css.height(Css.px(45)),
            /* :: */[
              Css.fontWeight(/* `num */[
                    5496390,
                    600
                  ]),
              /* :: */[
                Css.fontSize(Css.px(14)),
                /* :: */[
                  Css.cursor(/* pointer */-786317123),
                  /* :: */[
                    Css.borderStyle(/* none */-922086728),
                    /* :: */[
                      Css.outlineStyle(/* none */-922086728),
                      /* :: */[
                        Css.borderRadius(Css.px(3)),
                        /* :: */[
                          Css.marginTop(Css.px(25)),
                          /* :: */[
                            Css.boxShadow(Css.Shadow.box(Css.px(0), Css.px(1), Css.px(3), undefined, undefined, Css.rgba(0, 0, 0, 0.3))),
                            /* [] */0
                          ]
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ]);

var ButtonStyles = {
  button: button
};

function Form$FormErrors(Props) {
  var formRules = Props.formRules;
  return React.createElement("div", undefined, React.createElement("ul", undefined, Belt_Array.map(formRules, (function (rule) {
                        var match = rule[/* valid */3];
                        var match$1 = rule[/* valid */3];
                        return React.createElement("li", {
                                    key: String(rule[/* id */0]),
                                    className: match ? "is-success help is-size-6" : "is-danger help is-size-6"
                                  }, React.createElement("i", {
                                        className: match$1 ? "fas fa-check" : "fas fa-times"
                                      }), " ", rule[/* message */2]);
                      }))));
}

var FormErrors = {
  make: Form$FormErrors
};

function Form(Props) {
  var formType = Props.formType;
  var setUser = Props.setUser;
  console.log("setUser", setUser);
  var match = UseForm.useForm(formType);
  var handleChange = match[2];
  var formRules = match[1];
  var state = match[0];
  var match$1 = formType === /* SignUp */1;
  return React.createElement("div", {
              className: FormStyle.Styles.container
            }, React.createElement("div", {
                  className: "column is-4 is-offset-4"
                }, React.createElement("h1", {
                      className: "is-size-1 has-text-centered is-capitalized"
                    }, FormTypes.formTypeToString(formType)), React.createElement("br", undefined), formRules.length !== 0 ? React.createElement(Form$FormErrors, {
                        formRules: formRules
                      }) : null, React.createElement("br", undefined), React.createElement("div", {
                      className: "box"
                    }, React.createElement("form", {
                          onSubmit: match[3]
                        }, match$1 ? React.createElement("div", {
                                className: "field"
                              }, React.createElement("label", {
                                    className: "label"
                                  }, "Username"), React.createElement("div", {
                                    className: FormStyle.Styles.input
                                  }, React.createElement("input", {
                                        className: FormStyle.Styles.input,
                                        name: "username",
                                        required: true,
                                        type: "text",
                                        value: state[/* username */0],
                                        onChange: handleChange
                                      }))) : null, React.createElement("div", {
                              className: "field"
                            }, React.createElement("label", {
                                  className: "label"
                                }, "Email Address"), React.createElement("div", {
                                  className: "control"
                                }, React.createElement("input", {
                                      className: FormStyle.Styles.input,
                                      name: "email",
                                      required: true,
                                      type: "email",
                                      value: state[/* email */1],
                                      onChange: handleChange
                                    }))), React.createElement("div", {
                              className: "field"
                            }, React.createElement("label", {
                                  className: "label"
                                }, "Password"), React.createElement("div", {
                                  className: "control"
                                }, React.createElement("input", {
                                      className: FormStyle.Styles.input,
                                      name: "password",
                                      required: true,
                                      type: "password",
                                      value: state[/* password */2],
                                      onChange: handleChange
                                    }))), React.createElement("button", {
                              className: button,
                              type: "submit"
                            }, FormTypes.formTypeToString(formType), React.createElement("br", undefined))))));
}

var make = Form;

export {
  ButtonStyles ,
  FormErrors ,
  make ,
  
}
/* button Not a pure module */
