// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Auth from "../aws/Auth.bs.js";
import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as ReasonReactRouter from "reason-react/src/ReasonReactRouter.js";

function useProtectedRoute(param) {
  var match = React.useState((function () {
          return false;
        }));
  var setAuthenticated = match[1];
  var checkAuthState = function (param) {
    Auth.currentAuthenticatedUser.then((function (_data) {
              Curry._1(setAuthenticated, (function (param) {
                      return true;
                    }));
              return Promise.resolve(/* Ok */Block.__(0, [_data]));
            })).catch((function (error) {
            console.log("error", error);
            Curry._1(setAuthenticated, (function (param) {
                    return false;
                  }));
            ReasonReactRouter.push("/profile");
            return Promise.resolve(/* Error */Block.__(1, [error]));
          }));
    return /* () */0;
  };
  React.useEffect((function () {
          checkAuthState(/* () */0);
          return ;
        }), /* array */[]);
  return match[0];
}

export {
  useProtectedRoute ,
  
}
/* Auth Not a pure module */
