// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Hub from "../aws/Hub.bs.js";
import * as Auth from "../aws/Auth.bs.js";
import * as Form from "./Form.bs.js";
import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Container from "../components/Container.bs.js";
import * as FormTypes from "../hooks/FormTypes.bs.js";
import * as AwsAmplify from "aws-amplify";

function toSerializableError(error, errorCode) {
  return /* record */[
          /* message */error[/* message */0],
          /* name */error[/* name */1],
          /* stack */error[/* stack */2],
          /* code */errorCode
        ];
}

function Profile(Props) {
  var match = React.useState((function () {
          return ;
        }));
  var setUser = match[1];
  var user = match[0];
  var checkUser = function (param) {
    Auth.currentUserPoolUser("Amplify.Config.identityPoolId").then((function (data) {
              var userInfo = FormTypes.fromJs(data);
              console.log("userInfo: ", userInfo);
              Curry._1(setUser, (function (param) {
                      return userInfo;
                    }));
              return Promise.resolve(/* Ok */Block.__(0, [userInfo]));
            })).catch((function (error) {
            console.log("error", error);
            console.log("toSerializableError", (function (param) {
                    return toSerializableError(error, param);
                  }));
            var errorS = function (param) {
              return toSerializableError(error, param);
            };
            console.log("toSerializableError:errorS", errorS);
            return Promise.resolve(/* Error */Block.__(1, [error]));
          }));
    return /* () */0;
  };
  var listener = function (payload) {
    console.log("listener_payload", payload);
    var match = payload[/* event */0];
    if (match !== -1059795887) {
      console.log("logger", payload);
      return /* () */0;
    } else {
      return Curry._1(setUser, (function (param) {
                    return ;
                  }));
    }
  };
  React.useEffect((function () {
          checkUser(/* () */0);
          Hub.listen(/* auth */-1065951384, listener);
          return (function (param) {
                    return Hub.remove(/* auth */-1065951384, listener);
                  });
        }), /* array */[]);
  if (user !== undefined) {
    var user$1 = user;
    var match$1 = user$1[/* attributes */1][/* phone_number */3];
    return React.createElement(Container.make, {
                children: null
              }, React.createElement("h1", undefined, "Profile"), React.createElement("h2", undefined, "Username: " + user$1[/* username */0]), React.createElement("h3", undefined, "Email: " + user$1[/* attributes */1][/* email */2]), (match$1 == null) ? null : React.createElement("h4", undefined, "Phone: " + match$1), React.createElement("button", {
                    onClick: (function (param) {
                        AwsAmplify.Auth.signOut().then((function (param) {
                                  console.log("signed Out");
                                  return Promise.resolve(/* () */0);
                                })).catch((function (error) {
                                console.log("error", error);
                                return Promise.resolve(/* () */0);
                              }));
                        return /* () */0;
                      })
                  }, "Sign Out"));
  } else {
    return React.createElement(Form.make, {
                formType: /* SignIn */0,
                setUser: setUser
              });
  }
}

var make = Profile;

export {
  toSerializableError ,
  make ,
  
}
/* Hub Not a pure module */
